<?xml version="1.0" encoding="UTF-8" ?>

<!-- 测试用例主要是为了测试功能, 所以为了提高测试效率, 测试数据会尽可能的少,
一般情况下, 查询语句返回数据的条数可能只有几条, 这样的话, 如果为每个返回的预期值都创建一个预期文件的话, 预期文件的数量会很多, 不利于后期维护
所以一个查询sql如果有多组参数的话, 那么多组参数的执行结果都放在同一个文件里, 在row中会添加一个属性, 目前想到的是使用参数所在的代码行数来作为value进行区分

只变更参数不会影响表头信息, 变更查询条件才可能会影响

集成测试用例可以放在Github Actions执行, 关于集成测试中出现异常是否继续执行的问题, 会先在Junit中加一个变量进行控制, 后续改为maven的配置参数

目前的测试框架逻辑参考了shardingsphere的test逻辑, 只是模仿了大致的逻辑, 很多细节还没看懂, 代码还不够细致, 后续会优化改版

-->
<dataset>
    <metadata>
        <column name="a" type="int"/>
        <column name="b" type="int"/>
    </metadata>
    <row id="参数对应的代码行号" value="对应的返回结果"/>
    <row id="27" value='["1", "2022-05-28 11:22:33.0"]'/>
    <row id="28" value='["2", "2022-05-28 22:33:44.0"]'/>
</dataset>


